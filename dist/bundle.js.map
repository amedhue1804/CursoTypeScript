{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,uDAAuD;AACvD;AACA;AACA;AACA,0MAA0M,cAAc;AACxN,8BAA8B,sBAAsB;AACpD,0BAA0B,YAAY,sBAAsB,qCAAqC,2CAA2C,MAAM;AAClJ,4BAA4B,MAAM,iBAAiB,YAAY;AAC/D,uBAAuB;AACvB,8BAA8B;AAC9B,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO,EAAE,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wCAAwC;AAC5E;AACA;AACA,eAAe,UAAU,EAAE,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA,eAAe;AACf,qBAAqB;AACrB;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,4BAA4B;AAC5B;AACA;AACA,uBAAuB,QAAQ,EAAE,WAAW,QAAQ,KAAK;AACzD;AACA;AACA,uBAAuB,QAAQ,QAAQ,KAAK;AAC5C;AACA;AACA,wBAAwB;AACxB,oCAAoC;AACpC,uCAAuC;AACvC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ,EAAE,UAAU;AAClC;AACA;AACA,6BAA6B;AAC7B,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iBAAiB,QAAQ,eAAe;AACjF;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA,iBAAiB;AACjB,0BAA0B;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA,KAAK;AACL;AACA,6BAA6B,+BAA+B,KAAK,KAAK;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA,KAAK;AACL;AACA;AACA,4BAA4B,OAAO,OAAO,eAAe,WAAW,KAAK;AACzE,4BAA4B,OAAO,OAAO,eAAe,WAAW,KAAK;AACzE;;;;;;;;UE7RA;UACA;UACA;UACA;UACA","sources":["webpack://cursotypescript/./src/index.ts","webpack://cursotypescript/webpack/before-startup","webpack://cursotypescript/webpack/startup","webpack://cursotypescript/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconsole.log(\"Hola Mundo\");\nvar nombre = \"Adrian\";\nlet apellido = \"Medina\";\nconsole.log(\"Hola\" + \"Mundo\");\nconsole.log(nombre + apellido);\nconsole.log(nombre, apellido);\nconsole.log(`Hola${nombre}${apellido}`);\n//Arrays de Datos\nlet alumnos = [\"Wanillo\", \"Kokunero\", \"Adrian\"];\nlet personas = [\"Lucia\"];\nlet union = [...alumnos, ...personas];\nconsole.log(union);\nlet misDatos = {\n    nombre: \"Adrian\",\n    apellidos: \"Medina\",\n    edad: 24\n};\nlet configuracion = Object.assign({ versionTS: \"Es6\", versionCodigo: \"1.0\" }, misDatos);\nlet propiedad = configuracion.versionTS;\nlet propiedad2 = configuracion.versionCodigo;\nconsole.log(`${propiedad}${propiedad2}`);\nvar EstadoTarea;\n(function (EstadoTarea) {\n    EstadoTarea[\"Pendiente\"] = \"P\";\n    EstadoTarea[\"EnProceso\"] = \"E\";\n    EstadoTarea[\"Terminado\"] = \"T\";\n})(EstadoTarea || (EstadoTarea = {}));\nlet estadoPendiente = EstadoTarea.EnProceso;\nconsole.log(estadoPendiente);\nlet tarea1 = { nombre: \"Tarea1\", prioridad: 2, estado: EstadoTarea.Terminado };\nlet empleadoAdri = { nombre: \"Adrian\", edad: 24, sueldo: 1500 };\nconsole.log(empleadoAdri.edad);\nconsole.log(tarea1.estado == \"E\" ? `La tarea ${tarea1.nombre} se encuentra en ejecucion` : 'aun no se ha ejecutado');\n//IF-ELSE\nif (tarea1.estado == \"P\") {\n}\nelse if (tarea1.estado == \"E\") {\n}\nelse {\n}\n//Switch\nswitch (tarea1.estado) {\n    case \"P\":\n        console.log(\"Tarea en proceso\");\n        break;\n    case \"E\":\n        console.log(\"Tarea en proceso\");\n        break;\n    default:\n        console.log(\"Tarea en proceso\");\n}\ntry {\n    let numero1 = 1;\n    console.log(numero1.toString);\n}\ncatch (error) {\n    console.log(\"Se ha producido un error al convertir un numero en String\");\n}\n//Funciones\n/**\n * Funcion que muestra un saludo por conosla\n */\nfunction saludar() {\n    let nombre = \"Martin\";\n    console.log(`Hola, ${nombre}!`);\n}\n//Invocacion de la funcion\nsaludar();\n/**\n * Funcion que muestra un saludo por conosla a una persona\n * @param nombre Nombre de la persona a saludar\n */\nfunction saludarPersona(nombre) {\n    console.log(`Hola, ${nombre}!`);\n}\n//Funcion con valor\nconst persona = \"Martin\";\nsaludarPersona(persona);\nfunction despedirPersona(nombre = \"Pepe\") {\n    console.log(`Adios, ${nombre}`);\n}\ndespedirPersona();\ndespedirPersona(\"Alba\");\nfunction despedirOpcional(nombre) {\n    if (nombre) {\n        console.log(`Adios, ${nombre}`);\n    }\n    else {\n        console.log(`Adios`);\n    }\n}\ndespedirOpcional(); //Adios\ndespedirOpcional(\"Juanjo\"); //Adios Juanjo\nfunction variosParams(nombre, apellidos, edad = 18) {\n    if (apellidos) {\n        console.log(`${nombre} ${apellidos} tiene ${edad}`);\n    }\n    else {\n        console.log(`${nombre} tiene ${edad}`);\n    }\n}\nvariosParams(\"Martin\"); //Martin tiene 18 años\nvariosParams(\"Martin\", \"San Jose\"); //Martin San jose tiene 18 años\nvariosParams(\"Martin\", undefined, 30); //Martin tiene 30 años\nvariosParams(\"Martin\", \"San Jose\", 30); //Martin San Jose tiene 30 años\nfunction saludoconerror(a) {\n    if (typeof (a) == `string`) {\n        console.log(\"A ES UN STRING\");\n    }\n    else if (typeof (a) == `number`) {\n        console.log(\"A ES UN NUMBER\");\n    }\n    else {\n        console.log(\"No es un string ni un number\");\n        throw Error(\"A no es un string ni un number\");\n    }\n}\nsaludoconerror(\"Hola\");\nsaludoconerror(3);\nfunction ejemploReturn(nombre, apellidos) {\n    return `${nombre} ${apellidos}`;\n}\nconst nombrecompleto = ejemploReturn(\"Martin\", \"San Jose\");\nconsole.log(nombrecompleto); //Martin San Jose\nconsole.log(ejemploReturn(\"Martin\", \"San Jose\")); //Martin San Jose\n/**\n *\n * @param nombres es una lista de nombres de string\n */\nfunction ejemploMultipleParams(...nombres) {\n    nombres.forEach((nombre) => {\n        console.log(nombre);\n    });\n}\nejemploMultipleParams(\"Martin\");\nejemploMultipleParams(\"Martin\", \"Pepe\", \"Juan\", \"Alba\");\nconst lista = [\"Alberto\", \"Sandra\"];\nejemploMultipleParams(...lista);\nfunction ejemploParamLista(nombres) {\n    nombres.forEach((nombre) => {\n        console.log(nombre);\n    });\n}\nejemploParamLista(lista);\nlet empleadoMartin = {\n    nombre: \"Martin\",\n    apellidos: \"San Jose\",\n    edad: 30\n};\nconst mostrarempleado = (empleado) => `${empleado.nombre} tiene ${empleado.edad} años`;\n//Llamamos a la Arrow Function\nmostrarempleado(empleadoMartin);\nconst datosEmpleado = (empleado) => {\n    if (empleado.edad > 70) {\n        return `Empleado ${empleado.nombre} esta en edad de jubilacion`;\n    }\n    else {\n        return `Empleado ${empleado.nombre} esta en edad laboral`;\n    }\n};\ndatosEmpleado(empleadoMartin); //Empleado martin esta en edad laboral\nconst obtenerSalario = (empleado, cobrar) => {\n    if (empleado.edad > 70) {\n        return `Empleado ${empleado.nombre} esta en edad de jubilacion`;\n    }\n    else {\n        cobrar(); //callback a ejecutar\n    }\n};\nobtenerSalario(empleadoMartin, () => `Cobrar Martin`);\n//Async Function\nfunction ejemploAsync() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield console.log(\"Tarea a completar antes de seguir con la secuencia de instrucciones\");\n        console.log(\"Compleatado\");\n    });\n}\nejemploAsync().then((respuesta) => {\n    console.log(\"Respuesta\", respuesta);\n}).catch(() => {\n}).finally;\n//Generators\nfunction* ejemploGenerator() {\n    //yield --> para emitir valores    \n    let index = 0;\n    while (index < 5) {\n        //Emitimos un valor incrementado\n        yield index++;\n    }\n}\n//Guardamos la funcion generadora en una variable\nlet generadora = ejemploGenerator();\n//Accedemos a los valores emitidos\nconsole.log(generadora.next().value); //0\nconsole.log(generadora.next().value); //1\nconsole.log(generadora.next().value); //2\nconsole.log(generadora.next().value); //3\n//Worker\nfunction* watcher(valor) {\n    yield valor; //Emitimos valor actual\n    yield* worker(valor); //Llamamos a las emisiones del worker para que emita otros valores \n    yield valor + 4; //Emitimos el valor final\n}\nfunction* worker(valor) {\n    yield valor + 1;\n    yield valor + 2;\n    yield valor + 3;\n}\nlet generatorSaga = watcher(0);\nconsole.log(generatorSaga.next().value); //0 lo hace el WATCHER\nconsole.log(generatorSaga.next().value); //1 LO HACE EL WORKER\nconsole.log(generatorSaga.next().value); //2 LO HACE EL WORKER\nconsole.log(generatorSaga.next().value); //3 LO HACE EL WORKER\nconsole.log(generatorSaga.next().value); //4 LO HACE EL WATCHER\n/**\n * CallBack\n */\nlet fsuma = function suma(a, b) {\n    return a + b;\n};\nlet fresta = function resta(a, b) {\n    return a - b;\n};\nfunction opera(x, y, funcion) {\n    return funcion(x, y);\n}\nopera(1, 2, fsuma);\nopera(1, 2, fresta);\nfunction asincrona() {\n    return __awaiter(this, void 0, void 0, function* () {\n        let suma = 0;\n        for (let i = 0; i < 1000; i++) {\n            suma += i;\n        }\n        return suma;\n    });\n}\nasincrona().then((data) => { console.log(`El resultado es ${data}`); });\n//ASYNC GENERADORA\nfunction* fgenerador2() {\n    yield \"Hola\";\n    yield \"Mundo\";\n    yield \"IES\";\n}\nlet llamadafgen2 = fgenerador2();\nlet str = llamadafgen2.next();\nwhile (str.done == false) {\n    console.log(str.value);\n}\nfunction obtenerDatosweb() {\n    return __asyncGenerator(this, arguments, function* obtenerDatosweb_1() {\n        let peticion = yield __await(fetch(\"https://haveibeenpwned.com/API/v2/breaches\"));\n        let datos = yield __await(peticion.json());\n        for (let index = 0; index < datos.length; index++) {\n            yield yield __await(datos[index]);\n        }\n    });\n}\nlet datosWebPage = obtenerDatosweb();\ndatosWebPage.next().then(({ value }) => { console.log(`${value.Name}`); });\ndatosWebPage.next().then(({ value }) => { console.log(`${value.Name}`); });\n//SOBRECARGA DE FUNCIONES\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/index.ts\"](0, __webpack_exports__);\n",""],"names":[],"sourceRoot":""}